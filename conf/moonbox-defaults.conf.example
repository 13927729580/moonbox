moonbox {
  jwt {
    # algorithm = "HS256"
    # secret = "moonbox_secret"
  }

  login {
    # implementation = "built-in"
  }

  port {
    # maxRetries = 16
  }

  schedule {
    # initial.wait = 5
    # interval = 1
  }

  timer {
    # enable = false
    # org.quartz.scheduler.instanceName = "TimedEventScheduler"
    # org.quartz.threadPool.threadCount = 3
    # org.quartz.scheduler.skipUpdateCheck = true
    # org.quartz.jobStore.misfireThreshold = 3000
    # moonbox.timer.org.quartz.jobStore.class = "org.quartz.simpl.RAMJobStore"
  }

  rest {
    server {
      port = 8080
      # request.timeout = "600s"
      # idle.timeout = "600s"
    }
  }

  tcp {
    server {
      port = 10010
    }
  }

  rpc {
    # implementation = "akka"
    # akka.loglevel = "INFO"
  }

  persist {
    # implementation = "NONE"
  }

  catalog {
    implementation = "mysql"
    url = "jdbc:mysql://host:port/moonbox?createDatabaseIfNotExist=true"
    user = "user"
    password = "password"
    driver = "com.mysql.jdbc.Driver"
  }

  cache {
    implementation = "redis"
    redis.servers = "host:port"
  }

  mixcal {
    implementation = "spark"
    spark.master = "local[*]"
    spark.app.name = "test1"
    pushdown.enable = true
    column.permission.enable = true
    spark.sql.cbo.enabled = true
    spark.sql.constraintPropagation.enabled = false
  }
}
